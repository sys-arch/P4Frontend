# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# azure-pipelines.yml
# Pipeline que se ejecuta al hacer un commit en cualquier rama

trigger:
 branches:
  include:
    - '*' # Ejecutar la pipeline cuando haya commits en cualquier rama1

pool:
 vmImage: 'ubuntu-latest' # Usar una VM con Ubuntu

steps:
 # 1. Linting del frontend
 - script: |
    echo "Ejecutando Linting del frontend
    npm run lint
    displayName: 'Linting del frontend'

 # 2. Ejecutar pruebas del frontend
 - script: |
    echo "Ejecutando pruebas del frontend"
    npm test
    displayName: 'Pruebas unitarias del frontend'

 # 3. Compilar el frontend
 - script: |
    echo "Compilando el frontend"
    npm run build
    displayName: 'Compilación del frontend'

- stage: Code_Analysis
  displayName: 'Análisis de calidad del código'
  dependsOn: Build_and_Test
  condition: succeeded()
  jobs:
  - job: CodeQuality
    displayName: 'Análisis de SonarQube'
    steps:
      # 1. Preparar el análisis de SonarQube
      - task: SonarQubePrepare@5
        inputs:
          SonarQube: 'SonarQubeConnection'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: '$(QUBE-KEY)'
          cliProjectName: 'Java Backend Project'
          cliSources: '.'
        displayName: 'Preparar el análisis de SonarQube'

      # 2. Compilar el proyecto con Maven y realizar análisis de SonarQube
      - script: |
          mvn clean verify sonar:sonar
        displayName: 'Compilar el proyecto y ejecutar SonarQube'

      # 3. Publicar el resultado del análisis en SonarQube
      - task: SonarQubePublish@6
        inputs:
          pollingTimeoutSec: '300'
        displayName: 'Publicar resultados de SonarQube'

